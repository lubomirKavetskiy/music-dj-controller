{"version":3,"sources":["img/dj_girl.jpg","common/constatns.js","redux/reducers/uploadPageReducer.js","redux/reducers/djControllerPageReducer.js","redux/reducers/index.js","redux/actions/actionsTypes.js","redux/store/index.js","react/components/TracksUploader.js","redux/actions/actionsCreators.js","common/commonFunc.js","react/containers/UploadPage/UploadPage.js","react/components/TracksPlayer.js","react/containers/DjControllerPage/DjControllerPage.js","react/App.js","index.js"],"names":["module","exports","__webpack_require__","p","ConstantsList","Object","freeze","UPLOAD_PAGE_ROUTE","DJ_CONTROLLER_PAGE_ROUTE","PLAYBACK_RATE_VALUES","PLAYERS","id","initialState","uploadPageReducer_step","uploadPageReducer_iterator","Symbol","iterator","uploadPageReducer_iteratorNormalCompletion","next","done","i","value","uploading","data","commonVolume","djControllerPageReducer_step","djControllerPageReducer_iterator","djControllerPageReducer_iteratorNormalCompletion","assign","defineProperty","currentTrackIndex","isPlaying","currentTrackPosition","currentTrackSpeed","currentTrackVolume","combineReducers","router","routerReducer","tracks","state","arguments","length","undefined","action","type","payload","playerId","objectSpread","concat","filter","el","ind","arr","indexOf","players","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","rootReducer","TracksUploader","files","_this$props","this","props","tracksUploadStart","tracksUploadEnd","existTracks","map","item","track","name","uniqueFiles","readerFile","file","Promise","resolve","reject","reader","FileReader","onload","e","audio","Audio","target","result","onerror","onabort","Error","readAsDataURL","all","then","error","console","log","_this$props2","tracksUploading","react_default","a","createElement","className","dist_es","onDrop","handleDrop","bind","accept","disabled","Icon_default","classNames","color","react_loader_spinner_default","height","width","Component","tracksList","deleteTrack","trackIndex","setCurrentTrackIndex","index","resetPlayers","toPlay","toPause","setCurrentTrackPosition","valueFromSlider","setCurrentTrackSpeed","setCurrentTrackVolume","setCommonVolume","checkExistingTracks","_ref","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","err","return","returnExistingTracksNumber","tracksData","loadFontAwesomeIcons","loadCSS","document","querySelector","UploadPage","renderTracksList","_this","classes","key","IconButton_default","aria-label","button","onClick","Delete_default","push","_this2","existingTracks","react","player","Grid_default","xs","sm","md","Paper_default","react_components_TracksUploader","Button_default","swithToDjControllerPage","variant","connect","dispatch","bindActionCreators","withStyles","theme","borderRadius","TracksPlayer","changeCurrentTrackPosition","event","currentTime","duration","converterFromSecToMin","parseInt","changeCurrentTrackSpeed","playbackRate","oneTrackFromStart","_this$props3","oneTrackToStartPosition","oneTrackPlay","setTimeout","_this$props4","existingTracksNumber","_this$props5","oneTrackPause","switchTrack","changeCurrentTrackVolume","src","djImage","alt","renderCurrentTrackData","Slider_default","direction","onChange","max","min","step","Math","round","FormControl_default","Select_default","displayEmpty","MenuItem_default","DjControllerPage","side","newCurrentTrackIndex","maxIndex","includes","currentTrack","allTracksToStartPosition","setInterval","self","floor","volume","play","_this3","forEach","pause","clearInterval","_this4","_this5","_this$props6","_this6","_this$props7","react_components_TracksPlayer","changeOneTrackVolume","allTracksPlay","allTracksPause","changeCommonVolume","switchToUploadPage","App","container","spacing","Switch","Route","exact","path","component","render","store","getState","containers_DjControllerPage_DjControllerPage","Redirect","to","getElementById","ReactDOM","es","react_router_redux_es","src_react_App"],"mappings":"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","file":"static/js/main.4acc6c33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dj_girl.66f28e11.jpg\";","export const ConstantsList = Object.freeze({\n  UPLOAD_PAGE_ROUTE: '/upload',\n  DJ_CONTROLLER_PAGE_ROUTE: '/dj-controller',\n  PLAYBACK_RATE_VALUES: [0.5, 1, 1.5],\n  PLAYERS: [\n    { id: 1 },\n    { id: 2 },\n    { id: 3 },\n  ],\n});\n","import {\n  TRACKS_UPLOAD_START,\n  TRACKS_UPLOAD_END,\n  DELETE_TRACK,\n} from '../actions/actionsTypes';\nimport { ConstantsList } from '../../common/constatns';\n\nconst initialState = {};\n\nfor (let i of ConstantsList.PLAYERS) {\n  initialState[i.id] = {\n    uploading: false,\n    data: [],\n  }\n}\n\nexport default (state = initialState, action) => {\n  const { type, payload, playerId } = action;\n\n  switch (type) {\n\n    case TRACKS_UPLOAD_START:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state[playerId], { uploading: true }),\n      };\n\n    case TRACKS_UPLOAD_END:\n      return {\n        ...state,\n        [playerId]: {\n          uploading: false,\n          data: state[playerId].data.concat(payload),\n        }\n      };\n\n    case DELETE_TRACK:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state.playerId, {\n          data: state[playerId].data.filter((el, ind, arr) => arr.indexOf(el) !== payload),\n        })\n      };\n\n    default: return state;\n  }\n};\n","import {\n  RESET_PLAYERS,\n  TO_PLAY,\n  TO_PAUSE,\n  SET_CURRENT_TRACK_INDEX,\n  SET_CURRENT_TRACK_POSITION,\n  SET_CURRENT_TRACK_SPEED,\n  SET_CURRENT_TRACK_VOLUME,\n  SET_COMMON_VOLUME,\n} from '../actions/actionsTypes';\nimport { ConstantsList } from '../../common/constatns';\n\nlet initialState = {\n  commonVolume: 100,\n};\n\nfor (let i of ConstantsList.PLAYERS) {\n  initialState = Object.assign(initialState, {\n    [i.id]: {\n      currentTrackIndex: 0,\n      isPlaying: false,\n      currentTrackPosition: 0,\n      currentTrackSpeed: 1,\n      currentTrackVolume: 100,\n    }\n  });\n}\n\nexport default (state = initialState, action) => {\n  const { type, payload, playerId, } = action;\n\n  switch (type) {\n    case SET_CURRENT_TRACK_INDEX:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state[playerId], { currentTrackIndex: payload }),\n      };\n\n    case RESET_PLAYERS:\n      return {\n        ...initialState,\n      };\n\n    case TO_PLAY:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state[playerId], { isPlaying: true }),\n      };\n\n    case TO_PAUSE:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state[playerId], { isPlaying: false }),\n      };\n\n    case SET_CURRENT_TRACK_POSITION:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state[playerId], { currentTrackPosition: payload }),\n      };\n\n    case SET_CURRENT_TRACK_SPEED:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state[playerId], { currentTrackSpeed: payload }),\n      };\n\n    case SET_CURRENT_TRACK_VOLUME:\n      return {\n        ...state,\n        [playerId]: Object.assign({}, state[playerId], { currentTrackVolume: payload }),\n      };\n\n    case SET_COMMON_VOLUME:\n      return {\n        ...state,\n        commonVolume: payload,\n      };\n\n    default: return state;\n  }\n};\n","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\nimport tracks from './uploadPageReducer';\r\nimport players from './djControllerPageReducer';\r\n\r\nexport default combineReducers({\r\n  router: routerReducer,\r\n  tracks,\r\n  players,\r\n});\r\n","export const TRACKS_UPLOAD_START = 'TRACKS_UPLOAD_START';\nexport const TRACKS_UPLOAD_END = 'TRACKS_UPLOAD_END';\nexport const DELETE_TRACK = 'DELETE_TRACK';\nexport const RESET_PLAYERS = 'RESET_PLAYERS';\nexport const TO_PLAY = 'TO_PLAY';\nexport const TO_PAUSE = 'TO_PAUSE';\nexport const SET_CURRENT_TRACK_INDEX = 'SET_CURRENT_TRACK_INDEX';\nexport const SET_CURRENT_TRACK_POSITION = 'SET_CURRENT_TRACK_POSITION';\nexport const SET_CURRENT_TRACK_SPEED = 'SET_CURRENT_TRACK_SPEED';\nexport const SET_CURRENT_TRACK_VOLUME = 'SET_CURRENT_TRACK_VOLUME';\nexport const SET_COMMON_VOLUME = 'SET_COMMON_VOLUME';\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { routerMiddleware } from \"react-router-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nexport const history = createHistory();\r\n\r\nconst initialState = {};\r\nconst enhancers = [];\r\nconst middleware = [thunk, routerMiddleware(history)];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\n  if (typeof devToolsExtension === \"function\") {\r\n    enhancers.push(devToolsExtension());\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n);\r\n\r\nexport default createStore(rootReducer, initialState, composedEnhancers);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport Icon from '@material-ui/core/Icon';\nimport Loader from 'react-loader-spinner';\nimport classNames from 'classnames';\n\nimport './TracksUploader.scss';\n\nclass TracksUploader extends Component {\n  handleDrop(files) {\n    const { tracks, tracksUploadStart, tracksUploadEnd, playerId } = this.props;\n    const existTracks = tracks[playerId].data.map(item => item.track.name);\n    const uniqueFiles = files.filter(el => existTracks.indexOf(el.name) === -1);\n\n    // using Pomises, all operation in parallel\n    const readerFile = file => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        const track = file;\n\n        reader.onload = e => resolve(\n          {\n            track,\n            audio: new Audio(e.target.result),\n          }\n        );\n\n        reader.onerror = reader.onabort = () => reject(new Error(\"error\"));\n        reader.readAsDataURL(track);\n      });\n    }\n\n    const readMultiFiles = () =>\n      Promise.all(uniqueFiles.map(readerFile))\n        .then(result => tracksUploadEnd(playerId, result), error => console.log(error));\n    // OR using catch:\n    // .then(result => tracksUploadEnd(playerId, result))\n    // .catch(error => console.log(error));\n\n    if (uniqueFiles.length) {\n      tracksUploadStart(playerId);\n      readMultiFiles();\n    }\n\n    // OR without using Promises, all operation also in parallel:\n    // const tracksList = [];\n    // let completed = 0;\n\n    // uniqueFiles.forEach((file, index) => {\n    //   const reader = new FileReader();\n    //   const track = file;\n\n    //   reader.onload = e => {\n    //     tracksList[index] = {\n    //       track,\n    //       audio: new Audio(e.target.result)\n    //     };\n\n    //     completed++;\n\n    //     if (completed === uniqueFiles.length) {\n    //       tracksUploadEnd(playerId, tracksList);\n    //     }\n    //   }\n    //   reader.readAsDataURL(track);\n    // });\n  }\n\n  render() {\n    const { tracks, playerId } = this.props;\n    const tracksUploading = tracks[playerId].uploading;\n\n    return (\n      <div className=\"dropzone-wrapper\">\n        <Dropzone\n          onDrop={this.handleDrop.bind(this)}\n          accept=\"audio/*\"\n          disabled={tracksUploading}\n        >\n          <Icon\n            className={classNames('icon-cloud-upload fas fa-cloud-upload-alt')}\n            color=\"primary\"\n          />\n          <p>Drag and drop</p>\n          <p className=\"note-text\">*only audio format</p>\n          {tracksUploading && <div className=\"loader-container\">\n            <Loader\n              type=\"Circles\"\n              color=\"#008000\"\n              height=\"100\"\n              width=\"100\"\n            />\n          </div>\n          }\n        </Dropzone>\n      </div>\n    );\n  }\n}\n\nTracksUploader.propTypes = {\n  tracks: PropTypes.object.isRequired,\n  playerId: PropTypes.number.isRequired,\n}\n\nexport default TracksUploader;\n","import {\n  TRACKS_UPLOAD_START,\n  TRACKS_UPLOAD_END,\n  DELETE_TRACK,\n  RESET_PLAYERS,\n  TO_PLAY,\n  TO_PAUSE,\n  SET_CURRENT_TRACK_INDEX,\n  SET_CURRENT_TRACK_POSITION,\n  SET_CURRENT_TRACK_SPEED,\n  SET_CURRENT_TRACK_VOLUME,\n  SET_COMMON_VOLUME,\n} from './actionsTypes';\n\nexport const tracksUploadStart = playerId => (\n  {\n    type: TRACKS_UPLOAD_START,\n    playerId,\n  }\n);\n\nexport const tracksUploadEnd = (playerId, tracksList) => (\n  {\n    type: TRACKS_UPLOAD_END,\n    payload: tracksList,\n    playerId,\n  }\n);\n\nexport const deleteTrack = (playerId, trackIndex) => (\n  {\n    type: DELETE_TRACK,\n    payload: trackIndex,\n    playerId,\n  }\n);\n\nexport const setCurrentTrackIndex = (playerId, index) => {\n  return (\n    {\n      type: SET_CURRENT_TRACK_INDEX,\n      payload: index,\n      playerId,\n    })\n};\n\nexport const resetPlayers = () => (\n  {\n    type: RESET_PLAYERS,\n  }\n);\n\nexport const toPlay = (playerId) => (\n  {\n    type: TO_PLAY,\n    playerId,\n  }\n);\n\nexport const toPause = (playerId) => (\n  {\n    type: TO_PAUSE,\n    playerId,\n  }\n);\n\nexport const setCurrentTrackPosition = (playerId, valueFromSlider) => (\n  {\n    type: SET_CURRENT_TRACK_POSITION,\n    payload: valueFromSlider,\n    playerId,\n  }\n);\n\nexport const setCurrentTrackSpeed = (playerId, valueFromSlider) => (\n  {\n    type: SET_CURRENT_TRACK_SPEED,\n    payload: valueFromSlider,\n    playerId,\n  }\n);\n\nexport const setCurrentTrackVolume = (playerId, valueFromSlider) => (\n  {\n    type: SET_CURRENT_TRACK_VOLUME,\n    payload: valueFromSlider,\n    playerId,\n  }\n);\n\nexport const setCommonVolume = (valueFromSlider) => (\n  {\n    type: SET_COMMON_VOLUME,\n    payload: valueFromSlider,\n  }\n);\n","import { ConstantsList } from './constatns';\nimport { loadCSS } from 'fg-loadcss/src/loadCSS';\n\nexport const checkExistingTracks = ({ tracks }) => {\n  let result = false;\n  for (let player of ConstantsList.PLAYERS) {\n    if (tracks[player.id].data.length) {\n      result = true;\n      break;\n    }\n  }\n  return result;\n}\n\nexport const returnExistingTracksNumber = tracksData => tracksData.length;\n\nexport const loadFontAwesomeIcons = () => loadCSS(\n  'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n  document.querySelector('#insertion-point-jss'),\n);\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport TracksUploader from '../../components/TracksUploader';\r\nimport {\r\n  tracksUploadStart,\r\n  tracksUploadEnd,\r\n  deleteTrack,\r\n} from '../../../redux/actions/actionsCreators';\r\nimport { ConstantsList } from '../../../common/constatns';\r\nimport { checkExistingTracks, loadFontAwesomeIcons } from '../../../common/commonFunc';\r\nimport './UploadPage.scss';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    borderRadius: 0,\r\n  },\r\n});\r\n\r\nclass UploadPage extends Component {\r\n  //============= GET ICONS FOR MATERIAL UI RAECT =============//\r\n  componentDidMount() {\r\n    loadFontAwesomeIcons();\r\n  }\r\n\r\n\r\n  renderTracksList = playerId => {\r\n    const { tracks, deleteTrack, classes } = this.props;\r\n    return (\r\n      <ul className=\"tracks-list\">{tracks[playerId].data.map((item, index) =>\r\n        <li key={index} className=\"tracks-list__item\">\r\n          <span className=\"tracks-list__title\">{`${index + 1}. ${item.track.name}`}</span>\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"Delete\"\r\n            className={`${classes.button} button--delete`}\r\n            onClick={() => deleteTrack(playerId, index)}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </li>)}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  swithToDjControllerPage() {\r\n    checkExistingTracks(this.props) && this.props.history.push(ConstantsList.DJ_CONTROLLER_PAGE_ROUTE);\r\n  }\r\n\r\n  render() {\r\n    const { tracks, tracksUploadStart, tracksUploadEnd, classes } = this.props;\r\n    const existingTracks = checkExistingTracks(this.props);\r\n\r\n    return (\r\n      < Fragment >\r\n        {\r\n          ConstantsList.PLAYERS.map((player, index) => (\r\n            <Grid item xs={12} sm={6} md={4} key={index}>\r\n              <Paper className=\"paper\">\r\n                <TracksUploader\r\n                  playerId={player.id}\r\n                  tracks={tracks}\r\n                  tracksUploadStart={tracksUploadStart}\r\n                  tracksUploadEnd={tracksUploadEnd}\r\n                />\r\n                <span className=\"player__title\">Player #{player.id}</span>\r\n                {(tracks[player.id].data.length > 0)\r\n                  &&\r\n                  this.renderTracksList(player.id)\r\n                }\r\n              </Paper>\r\n            </Grid>\r\n          ))\r\n        }\r\n        <div className=\"button-wrap\">\r\n          <Button\r\n            disabled={!existingTracks}\r\n            onClick={() => this.swithToDjControllerPage()}\r\n            className={\r\n              `${classes.button &&\r\n              (existingTracks ? 'pulse' : null)} button--link`\r\n            }\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            to dj controller\r\n          <Icon className=\"fas fa-chevron-right\" />\r\n          </Button>\r\n        </div>\r\n      </Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nUploadPage.propTypes = {\r\n  tracks: PropTypes.object.isRequired,\r\n  tracksUploadStart: PropTypes.func.isRequired,\r\n  tracksUploadEnd: PropTypes.func.isRequired,\r\n  deleteTrack: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    tracks: state.tracks,\r\n  }\r\n);\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(\r\n  {\r\n    tracksUploadStart,\r\n    tracksUploadEnd,\r\n    deleteTrack,\r\n  },\r\n  dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UploadPage));\r\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport Slider from '@material-ui/lab/Slider';\nimport Icon from '@material-ui/core/Icon';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nimport { returnExistingTracksNumber } from '../../common/commonFunc';\nimport { ConstantsList } from '../../common/constatns';\nimport { loadFontAwesomeIcons } from '../../common/commonFunc';\nimport djImage from '../../img/dj_girl.jpg';\nimport './TracksPlayer.scss';\n\nclass TracksPlayer extends Component {\n  //============= GET ICONS FOR MATERIAL UI RAECT =============//\n  componentDidMount() {\n    loadFontAwesomeIcons();\n  }\n\n  //============= RENDER TRACK DATA =============//\n  renderCurrentTrackData() {\n    const { tracksData, players, playerId, currentTrackIndex } = this.props;\n    const existingTracksNumber = returnExistingTracksNumber(tracksData);\n\n    return (\n      <div>\n        <div className=\"track__title\">\n          <p>{!!existingTracksNumber && tracksData[currentTrackIndex].track.name}</p>\n          {players[playerId].isPlaying &&\n            <Loader\n              type=\"Audio\"\n              color=\"rgb(0, 44, 59)\"\n              height=\"40\"\n              width=\"50\"\n            />}\n        </div>\n        <p className=\"track__number\">\n          {existingTracksNumber\n            ? `It's track #${currentTrackIndex + 1} of ${existingTracksNumber} track${existingTracksNumber > 1\n              ? 's'\n              : ''}`\n            : `Player list is empty`}\n        </p>\n      </div>\n    );\n  }\n\n  //============= CHANGE TRACK POSITION =============//\n  changeCurrentTrackPosition = (event, value) => {\n    const { tracksData, currentTrackIndex, playerId, setCurrentTrackPosition } = this.props;\n\n    tracksData[currentTrackIndex].audio.currentTime = (value * tracksData[currentTrackIndex].audio.duration) / 100;\n    setCurrentTrackPosition(playerId, value);\n  }\n\n  //============= CONVERT SEC TO MIN =============//\n  // radix === 10 (can be 2-36)\n  converterFromSecToMin = data =>\n    `${parseInt(data / 60, 10)}:${((data % 60) < 10)\n      ? '0' + parseInt(data % 60, 10)\n      : parseInt(data % 60, 10)}`;\n\n  //============= CHANGE TRACK SPEED =============//\n  changeCurrentTrackSpeed = event => {\n    const { tracksData, playerId, currentTrackIndex, setCurrentTrackSpeed } = this.props;\n\n    tracksData[currentTrackIndex].audio.playbackRate = event.target.value;\n    setCurrentTrackSpeed(playerId, event.target.value);\n  }\n\n  //============= TRACK FROM START =============//\n  oneTrackFromStart = () => {\n    const { players, playerId, currentTrackIndex, oneTrackToStartPosition, oneTrackPlay } = this.props;\n\n    if (players[playerId].isPlaying) {\n      oneTrackToStartPosition(playerId, currentTrackIndex);\n      setTimeout(() => oneTrackPlay());\n    } else {\n      oneTrackToStartPosition(playerId, currentTrackIndex);\n    }\n  }\n\n  render() {\n    const {\n      players,\n      playerId,\n      tracksData,\n      currentTrackIndex,\n      oneTrackPlay,\n      oneTrackPause,\n      switchTrack,\n      changeCurrentTrackVolume,\n    } = this.props;\n\n\n    const existingTracksNumber = returnExistingTracksNumber(tracksData);\n    const currentTrackPosition = players[playerId].currentTrackPosition;\n    const currentTrackVolume = players[playerId].currentTrackVolume;\n\n    return (\n      <Fragment>\n        <img className=\"track__img\" src={djImage} alt=\"dj-girl\" />\n        {this.renderCurrentTrackData()}\n        {!!existingTracksNumber &&\n          <p className=\"track__current-position\">\n            <span>{this.converterFromSecToMin(currentTrackPosition * tracksData[currentTrackIndex].audio.duration * .01)}</span>\n            <span>{this.converterFromSecToMin(tracksData[currentTrackIndex].audio.duration)}</span>\n          </p>\n        }\n        <Slider\n          className=\"slider\"\n          disabled={!existingTracksNumber}\n          direction='horizontal'\n          onChange={this.changeCurrentTrackPosition}\n          max={100}\n          min={0}\n          step={1}\n          value={currentTrackPosition}\n        >\n        </Slider>\n        <div className=\"buttons-wrapper\">\n          <Button\n            disabled={!existingTracksNumber || (currentTrackPosition < 0.01)}\n            onClick={() => this.oneTrackFromStart()}\n            className=\"button--circle\"\n          >\n            <Icon className=\"fas fa-step-backward\" />\n          </Button>\n          <Button\n            disabled={existingTracksNumber < 2}\n            onClick={() => switchTrack(playerId, 'previous')}\n            className=\"button--circle\"\n          >\n            <Icon className=\"fas fa-backward\" />\n          </Button>\n          <Button\n            disabled={!existingTracksNumber}\n            onClick={() => oneTrackPlay()}\n            className=\"button--circle\"\n          >\n            <Icon className=\"fas fa-play\" />\n          </Button>\n          <Button\n            disabled={!existingTracksNumber}\n            onClick={() => oneTrackPause()}\n            className=\"button--circle\"\n          >\n            <Icon className=\"fas fa-pause\" />\n          </Button>\n          <Button\n            disabled={existingTracksNumber < 2}\n            onClick={() => switchTrack(playerId, 'next')}\n            className=\"button--circle\"\n          >\n            <Icon className=\"fas fa-forward\" />\n          </Button>\n        </div>\n        <div className=\"track-volume-speed-container\">\n          <div className=\"track-volume-speed-container__volume\">\n            <p className=\"track__current-volume\">\n              <span>Volume </span>\n              <span>{`${Math.round(currentTrackVolume)}%`}</span>\n            </p>\n            <Slider\n              className=\"slider\"\n              disabled={!existingTracksNumber}\n              direction='horizontal'\n              onChange={changeCurrentTrackVolume}\n              max={100}\n              min={0}\n              value={currentTrackVolume}\n            >\n            </Slider>\n          </div>\n          <div className=\"track-volume-speed-container__speed\">\n            <p className=\"track__current-speed\">Speed </p>\n            <FormControl disabled={!existingTracksNumber}>\n              <Select\n                className=\"select\"\n                value={players[playerId].currentTrackSpeed}\n                onChange={this.changeCurrentTrackSpeed}\n                displayEmpty\n                name=\"speed\"\n              >\n                {ConstantsList.PLAYBACK_RATE_VALUES.map((el, index) =>\n                  <MenuItem key={index} value={el}>{el}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </div>\n        </div>\n      </Fragment >\n    );\n  }\n}\n\nTracksPlayer.propTypes = {\n  players: PropTypes.object.isRequired,\n  playerId: PropTypes.number.isRequired,\n  tracksData: PropTypes.array.isRequired,\n  currentTrackIndex: PropTypes.number.isRequired,\n  oneTrackPlay: PropTypes.func.isRequired,\n  oneTrackPause: PropTypes.func.isRequired,\n  switchTrack: PropTypes.func.isRequired,\n  changeCurrentTrackVolume: PropTypes.func.isRequired,\n  oneTrackToStartPosition: PropTypes.func.isRequired,\n}\n\nexport default TracksPlayer;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/lab/Slider';\nimport Paper from '@material-ui/core/Paper';\n\nimport TracksPlayer from '../../components/TracksPlayer';\nimport {\n  resetPlayers,\n  toPlay,\n  toPause,\n  setCurrentTrackIndex,\n  setCurrentTrackPosition,\n  setCurrentTrackSpeed,\n  setCurrentTrackVolume,\n  setCommonVolume,\n} from '../../../redux/actions/actionsCreators';\nimport { ConstantsList } from '../../../common/constatns';\nimport { returnExistingTracksNumber, loadFontAwesomeIcons } from '../../../common/commonFunc';\nimport './DjControllerPage.scss';\n\nclass DjControllerPage extends Component {\n  //============= GET ICONS FOR MATERIAL UI RAECT =============//\n  componentDidMount() {\n    loadFontAwesomeIcons();\n  }\n\n  //============= RESET PLAYERS =============//\n  componentWillUnmount() {\n    this.allTracksToStartPosition();\n    this.props.resetPlayers();\n  }\n\n  switchToUploadPage() {\n    this.props.history.push(ConstantsList.UPLOAD_PAGE_ROUTE);\n  }\n\n  //============= SWITCH TRACK =============//\n  switchTrack = (playerId, side) => {\n    const { tracks, players, setCurrentTrackIndex } = this.props;\n    const tracksData = tracks[playerId].data;\n    const currentTrackIndex = players[playerId].currentTrackIndex;\n\n    this.oneTrackToStartPosition(playerId, currentTrackIndex);\n\n    let newCurrentTrackIndex = currentTrackIndex;\n    let maxIndex = tracksData.length;\n\n    if (maxIndex > 1) {\n      if (side.includes('next')) {\n        newCurrentTrackIndex = newCurrentTrackIndex < maxIndex - 1\n          ? (newCurrentTrackIndex + 1)\n          : 0;\n      }\n\n      if (side.includes('previous')) {\n        newCurrentTrackIndex = newCurrentTrackIndex > 0\n          ? (newCurrentTrackIndex - 1)\n          : (maxIndex - 1);\n      }\n    }\n\n    setCurrentTrackIndex(playerId, newCurrentTrackIndex);\n    // https://github.com/reduxjs/react-redux/issues/291\n    // In React, state changes (and Reacf Redux uses setState internally) are potentially asynchronous. \n    // Because React batches update that happen during the same event handler.\n    // Calling dispatch will update the store state immediately but components will be updated a bit later during.\n\n    if (players[playerId].isPlaying) {\n      setTimeout(() => this.oneTrackPlay(playerId, newCurrentTrackIndex));\n    }\n  }\n\n  //============= PLAY TRACK =============//\n  oneTrackPlay(playerId, currentTrackIndex) {\n    const { tracks, players, toPlay, setCurrentTrackPosition } = this.props;\n\n    if (returnExistingTracksNumber(tracks[playerId].data) > 0 && !players[playerId].isPlaying) {\n      const currentTrack = tracks[playerId].data[currentTrackIndex].audio;\n\n      this[`${playerId}currentTimeInterval`] = setInterval(() => {\n        const self = this;\n\n        setCurrentTrackPosition(playerId, (currentTrack.currentTime * 100) / currentTrack.duration);\n\n        if (Math.floor(self.props.players[playerId].currentTrackPosition) === 100) {\n          this.switchTrack(playerId, 'next');\n        }\n      }, 500);\n\n      // initialize track\n      currentTrack.playbackRate = players[playerId].currentTrackSpeed;\n      currentTrack.volume = (players[playerId].currentTrackVolume / 100) * (players.commonVolume / 100);\n      toPlay(playerId);\n      currentTrack.play();\n    }\n  }\n\n  allTracksPlay() {\n    ConstantsList.PLAYERS.forEach(player => {\n      this.oneTrackPlay(player.id, this.props.players[player.id].currentTrackIndex);\n    });\n  }\n\n  //============= PAUSE TRACK =============//\n  oneTrackPause(playerId, currentTrackIndex) {\n    const { tracks, players, toPause } = this.props;\n    if (returnExistingTracksNumber(tracks[playerId].data) > 0 && players[playerId].isPlaying) {\n      const currentTrack = tracks[playerId].data[currentTrackIndex].audio;\n\n      currentTrack.pause();\n      toPause(playerId);\n      clearInterval(this[`${playerId}currentTimeInterval`]);\n    }\n  }\n\n  allTracksPause() {\n    ConstantsList.PLAYERS.forEach(player => {\n      this.oneTrackPause(player.id, this.props.players[player.id].currentTrackIndex);\n    });\n  }\n\n  //============= TRACK TO START POSITION =============//\n  oneTrackToStartPosition = (playerId, currentTrackIndex) => {\n    const { tracks, setCurrentTrackPosition } = this.props;\n\n    this.oneTrackPause(playerId, currentTrackIndex);\n\n    if (returnExistingTracksNumber(tracks[playerId].data) > 0) {\n      const currentTrack = tracks[playerId].data[currentTrackIndex].audio;\n\n      if (currentTrack.currentTime !== 0) {\n        currentTrack.currentTime = 0;\n        setCurrentTrackPosition(playerId, 0);\n      }\n    }\n  }\n\n  allTracksToStartPosition() {\n    ConstantsList.PLAYERS.forEach(player => {\n      this.oneTrackToStartPosition(player.id, this.props.players[player.id].currentTrackIndex);\n    });\n  }\n\n  //============= CHANGE TRACK VOLUME =============//\n  changeOneTrackVolume(value, playerId) {\n    const { tracks, players, setCurrentTrackVolume } = this.props;\n\n    setCurrentTrackVolume(playerId, value);\n    tracks[playerId].data[players[playerId].currentTrackIndex].audio.volume =\n      (value / 100) * (players.commonVolume / 100);\n  }\n\n  changeCommonVolume(value) {\n    const { tracks, players, setCommonVolume } = this.props;\n    setCommonVolume(value);\n\n    ConstantsList.PLAYERS.forEach(player => {\n      if (players[player.id].isPlaying) {\n        tracks[player.id].data[players[player.id].currentTrackIndex].audio.volume =\n          (players[player.id].currentTrackVolume / 100) * (value / 100);\n      }\n    });\n  }\n\n  render() {\n    const {\n      tracks,\n      players,\n      setCurrentTrackPosition,\n      setCurrentTrackSpeed,\n    } = this.props;\n\n    return (\n      <Fragment>\n        {\n          ConstantsList.PLAYERS.map((player, index) => (\n            <Grid item xs={12} sm={6} md={4} key={index}>\n              <Paper className=\"paper\">\n                <TracksPlayer\n                  key={index}\n                  tracksData={tracks[player.id].data}\n                  players={players}\n                  playerId={player.id}\n                  currentTrackIndex={players[player.id].currentTrackIndex}\n                  oneTrackToStartPosition={this.oneTrackToStartPosition}\n                  switchTrack={this.switchTrack}\n                  setCurrentTrackPosition={setCurrentTrackPosition}\n                  setCurrentTrackSpeed={setCurrentTrackSpeed}\n                  oneTrackPlay={() => this.oneTrackPlay(player.id, players[player.id].currentTrackIndex)}\n                  oneTrackPause={() => this.oneTrackPause(player.id, players[player.id].currentTrackIndex)}\n                  changeCurrentTrackVolume={(event, value) => this.changeOneTrackVolume(value, player.id)}\n                />\n              </Paper>\n            </Grid>\n          ))\n        }\n        <div className=\"common-controller-container\">\n          <div className=\"common-controller__buttons\">\n            <Button\n              className=\"button--circle\"\n              onClick={() => this.allTracksPlay()}\n            >\n              <Icon className=\"fas fa-play\" />\n            </Button>\n            <Button\n              className=\"button--circle\"\n              onClick={() => this.allTracksPause()}\n            >\n              <Icon className=\"fas fa-pause\" />\n            </Button>\n          </div>\n          <div className=\"common-controller__slider\">\n            <p className=\"common-controller__volume\">\n              <span>Volume</span>\n              <span>{`${Math.round(players.commonVolume)}%`}</span>\n            </p>\n            <Slider\n              onChange={(event, value) => this.changeCommonVolume(value)}\n              max={100}\n              min={0}\n              value={players.commonVolume}\n            >\n            </Slider>\n          </div>\n        </div>\n        <div className=\"button-wrap\">\n          <Button\n            className=\"button--link pulse\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.switchToUploadPage()}\n          >\n            <Icon className=\"fas fa-chevron-left\" />\n            to upload page\n        </Button>\n        </div>\n      </Fragment >\n    );\n  }\n}\n\nconst mapStateToProps = ({ tracks, players }) => (\n  {\n    tracks,\n    players,\n  }\n);\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    resetPlayers,\n    toPlay,\n    toPause,\n    setCurrentTrackIndex,\n    setCurrentTrackPosition,\n    setCurrentTrackSpeed,\n    setCurrentTrackVolume,\n    setCommonVolume,\n  },\n  dispatch);\n\nDjControllerPage.propTypes = {\n  tracks: PropTypes.object.isRequired,\n  players: PropTypes.object.isRequired,\n  resetPlayers: PropTypes.func.isRequired,\n  toPlay: PropTypes.func.isRequired,\n  toPause: PropTypes.func.isRequired,\n  setCurrentTrackIndex: PropTypes.func.isRequired,\n  setCurrentTrackPosition: PropTypes.func.isRequired,\n  setCurrentTrackSpeed: PropTypes.func.isRequired,\n  setCurrentTrackVolume: PropTypes.func.isRequired,\n  setCommonVolume: PropTypes.func.isRequired,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DjControllerPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nimport UploadPage from './containers/UploadPage/UploadPage';\nimport DjControllerPage from './containers/DjControllerPage/DjControllerPage';\nimport { ConstantsList } from '../common/constatns';\nimport { checkExistingTracks } from '../common/commonFunc';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main-wrapper\">\n        <Grid container spacing={24}>\n          <Switch>\n            <Route exact path={ConstantsList.UPLOAD_PAGE_ROUTE} component={UploadPage} />\n            <Route exact path={ConstantsList.DJ_CONTROLLER_PAGE_ROUTE}\n              render={props =>\n                checkExistingTracks(this.props.store.getState())\n                  ? (<DjControllerPage {...props} />)\n                  : (<Redirect to={ConstantsList.UPLOAD_PAGE_ROUTE} />)\n              }\n            />\n            <Redirect to={ConstantsList.UPLOAD_PAGE_ROUTE} />\n          </Switch >\n        </Grid>\n      </div>\n    );\n  };\n}\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired,\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\n\nimport store, { history } from './redux/store';\nimport App from './react/App';\nimport './index.scss';\n\nconst target = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App store={store} />\n    </ConnectedRouter>\n  </Provider>,\n  target\n);\n"],"sourceRoot":""}